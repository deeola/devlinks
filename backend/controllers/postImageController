const aws = require('aws-sdk');
const crypto = require('crypto')
const {promisify} = require('util')
const randomBytes = promisify(crypto.randomBytes)



const region = "eu-central-1"
const bucketName = process.env.AWS_BUCKET_NAME
const accessKeyId = process.env.AWS_ACCESS_KEY_ID
const secretAccessKey = process.env.AWS_SECRET_ACCESS_KEY

const s3 = new aws.S3({
  region,
  accessKeyId,
  secretAccessKey,
  signatureVersion: 'v4'
})


const handlePostImage = async (req, res) => {
const {email, image} = req.body

console.log(email, image)
console.log(accessKeyId, secretAccessKey, bucketName, region)
    const rawBytes = await randomBytes(16)
    const imageName = rawBytes.toString('hex')


  
    const params = ({
      Bucket: bucketName,
      Key: email+imageName,
      Expires: 60,
      ContentType: "image/jpg",
    })

 const uploadURL = await s3.getSignedUrlPromise('putObject', params)

  res.send({uploadURL})
}


module.exports = {  handlePostImage }